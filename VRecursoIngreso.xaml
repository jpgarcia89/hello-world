<telerik:RadWindow x:Name="radWindow" x:Class="SIIF.Cliente.Vistas.Catalogos.RecursoIngreso.VRecursoIngreso_P"
                   xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"	
                   xmlns:Conexion="clr-namespace:InvocadorNegocio;assembly=InvocadorNegocio"
                   xmlns:contratos="clr-namespace:SIIF.Contratos.Recurso_Ingreso;assembly=SIIF.Contratos"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:local="clr-namespace:SIIF.Cliente.Vistas.Catalogos.RecursoIngreso"
                   xmlns:treeview="clr-namespace:UCTreeviewControl;assembly=UCTreeView"
                   xmlns:Bool="clr-namespace:System;assembly=mscorlib"
                   mc:Ignorable="d"
                   xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                   Header="VRecursoIngreso_P" Height="600" Width="900"
                   WindowStartupLocation="CenterScreen">
    <telerik:RadBusyIndicator>
        <Grid>
            <!--Definicion de columnas Principales-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150*"/>
                <ColumnDefinition Width="500"/>
            </Grid.ColumnDefinitions>

            <!--Invocadorores de negocio-->
            <i:Interaction.Triggers>

                <!--Invocador q verifica si existen relaciones a fin de determinar si el item es apto para ser borrado-->
                <ei:PropertyChangedTrigger Binding="{Binding VerificarRelaciones, Mode=TwoWay, ElementName=radWindow}">
                    <i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding VerificarRelaciones, Mode=TwoWay, ElementName=radWindow}" 
                                                                                    Operator="Equal" RightOperand="true"/>
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>

                    <Conexion:InvocadorNegocio x:Name="inVerificaRelaciones"
                                                                           Clase="NRecurso_Ingreso"
                                                                           Metodo="ExistenRelaciones_P"
                                                                           radBusy="{Binding ElementName=rbsIndicator}"  
                                                                           Mensaje="Verificando Relaciones..."
                                                                           mostrarRadBusy="True"  
                                                                           Contrato="{x:Type Bool:Boolean}"
                                                                           InvocadorNegocioFinalizado="inVerificaRelaciones_InvocadorNegocioFinalizado"
                                                                           P1="{Binding ItemSeleccionado, ElementName=radWindow}"/>
                </ei:PropertyChangedTrigger>


                <!--Invocador de Negocio que carga el DataGridView con items-->
                <i:EventTrigger SourceName="tvRecursosIngrsos" EventName="Loaded">
                    <Conexion:InvocadorNegocio 
                                x:Name="inListaItems"
                                Clase="NRecurso_Ingreso"
                                Metodo="TraerEntidades_P"
                                Respuesta=""
                                InvocadorNegocioFinalizado="inListaItemsTreeView_InvocadorNegocioFinalizado"
                                Contrato="{x:Type contratos:CRecurso_Ingreso}"
                                radBusy="{Binding ElementName=rbsIndicator}"
                                mostrarRadBusy="True"					
                                Mensaje="Cargando Recursos de Ingresos..."/>
                </i:EventTrigger>

            </i:Interaction.Triggers>
            
            <!--Columna 1 - Arbol UCTreeView y botones ABM-->
            <GroupBox Header="Lista de Items">
                <Grid>
                    <!--Definicion de Filas del Panel Izquierdo-->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*"/>
                        <!--<RowDefinition Height="50"/>-->
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>

                    <!--UCTreeView-->
                    <treeview:UCTreeview x:Name="tvRecursosIngrsos" Grid.Row="0" UseCheckBoxes="True" MostrarLineas="True" TienePrimerNodoComoTitulo="False" SelectedItemChanged="tvRecursosIngrsos_SelectedItemChanged_1"/>

                    <!--panel de botones ABM-->
                    <HeaderedContentControl Grid.Row="1" Header="Opciones">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <StackPanel x:Name="pnlABM" Orientation="Horizontal">
                                <Button x:Name="btnAgregar" Content="Agregar" IsEnabled="{Binding PuedoHabilitarBotonAgregar, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:VRecursoIngreso_P}}}" Click="btnAgregar_Click"/>
                                <Button x:Name="btnModificar" Content="Modificar" IsEnabled="{Binding PuedoHabilitarBotonModificar, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:VRecursoIngreso_P}}}" Click="btnModificar_Click"/>
                                <Button x:Name="btnEliminar" Content="Eliminar" IsEnabled="{Binding PuedoHabilitarBotonEliminar, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:VRecursoIngreso_P}}}" Click="btnEliminar_Click"/>
                            </StackPanel>
                            <Button x:Name="btnSalir" Content="Salir" Click="btnSalir_Click"/>
                        </StackPanel>
                    </HeaderedContentControl>
                </Grid>
            </GroupBox>

            <!--Columna 2 - Panel de Detalles-->
            <GroupBox Grid.Column="1" Header="Datos Generales">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*" />
                        <RowDefinition Height="70" />
                    </Grid.RowDefinitions>

                    <!--//Datos-->
                    <StackPanel x:Name="pnlDetalleItem" Grid.Row="0" DataContext="{Binding ItemSeleccionado, ElementName=radWindow}" IsEnabled="False">

                        <!--Panel permite visualizar la lista de errores de validacion-->
                        <StackPanel.BindingGroup>
                            <BindingGroup Name="Grupo">
                                <BindingGroup.ValidationRules>
                                    <!-- AcÃ¡ se definen las Validaciones a nivel de Item. Se debe crear una clase por Regla dentro de Vistas/Validaciones-->
                                    <!--<validations:ValidacionDeRangoNroDeCheques ValidationStep="ConvertedProposedValue"/>-->
                                </BindingGroup.ValidationRules>
                            </BindingGroup>
                        </StackPanel.BindingGroup>

                        <!--Datos q no se pueden Editar-->
                        <StackPanel Orientation="Vertical" Background="LightGray" IsEnabled="False">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Codigo: " Width="100" HorizontalContentAlignment="Right"/>
                                <TextBox Width="50"  Text="{Binding codigo}" HorizontalContentAlignment="Center"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Tipo de Nodo: " Width="100" HorizontalContentAlignment="Right"/>
                                    <TextBox Width="130" Text="{Binding tipo_nodo}"/>
                                    <Image Source="{Binding recurso}" Width="20" Height="20"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Mascara: " Width="80" HorizontalContentAlignment="Right"/>
                                    <TextBox Width="100" Text="{Binding mascara}"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>

                        <!--Datos Editables-->
                        <StackPanel Orientation="Horizontal" >
                            <Label Content="Descripcion: " Width="100" HorizontalContentAlignment="Right"/>
                            <TextBox x:Name="txbDesc" Width="300" Text="{Binding ri_des, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MaxLength="120"/>
                        </StackPanel>
                    </StackPanel>

                    <!--Botones Aceptar/Cancelar-->
                    <StackPanel x:Name="pnlAceptarCancelar" Grid.Row="1" IsEnabled="False"  Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button x:Name="btnAceptar" Content="Aceptar" IsEnabled="{Binding (Validation.HasError), ElementName=pnlDetalleItem, Converter={StaticResource InvBoolConv}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger SourceName="btnAceptar" EventName="Click">
                                    <Conexion:InvocadorNegocio x:Name="inBtnAceptar"
                                                               Clase="NRecurso_Ingreso"                             
                                                               Metodo="{Binding NombreMetodo, ElementName=radWindow}"
                                                               Respuesta=""
                                                               InvocadorNegocioFinalizado="inBtnAceptar_InvocadorNegocioFinalizado"
                                                               Contrato="{x:Type contratos:Recurso_IngresoItem}"
                                                               radBusy="{Binding ElementName=rbsIndicator}"
                                                               mostrarRadBusy="True"					
                                                               Mensaje="Cargando Recursos de Ingresos..."
                                                               P1="{Binding ItemSeleccionado, ElementName=radWindow}"/>

                                    
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button x:Name="btnCancelar" Content="Cancelar" Click="btnCancelar_Click"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
    </telerik:RadBusyIndicator>
</telerik:RadWindow>
